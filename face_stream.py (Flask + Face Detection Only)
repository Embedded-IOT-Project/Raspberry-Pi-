from flask import Flask, render_template, Response
import cv2
import time
import os

app = Flask(__name__)
face_detector = cv2.CascadeClassifier('/home/prince/Desktop/streaming/haarcascade_frontalface_default.xml')
camera = cv2.VideoCapture('/dev/video0', cv2.CAP_V4L2)
camera.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
camera.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)
output_directory = "detected_faces"
os.makedirs(output_directory, exist_ok=True)

def generate_frames():
    prev_time = time.time()
    while True:
        success, frame = camera.read()
        if not success:
            break

        frame = cv2.resize(frame, (640, 480))
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        faces = face_detector.detectMultiScale(gray, 1.1, 5)

        if len(faces) > 0:
            faces = sorted(faces, key=lambda f: f[2] * f[3], reverse=True)
            (x, y, w, h) = faces[0]
            cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)
            coord_text = f"({x + w//2}, {y + h//2})"
            cv2.putText(frame, coord_text, (x, y + h + 25), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 255, 0), 2)
            filename = os.path.join(output_directory, f"face_{int(time.time())}.jpg")
            cv2.imwrite(filename, frame[y:y + h, x:x + w])

        ret, buffer = cv2.imencode('.jpg', frame)
        frame = buffer.tobytes()
        yield (b'--frame\r\nContent-Type: image/jpeg\r\n\r\n' + frame + b'\r\n')

@app.route('/')
def index(): return render_template('index.html')

@app.route('/video')
def video(): return Response(generate_frames(), mimetype='multipart/x-mixed-replace; boundary=frame')

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
